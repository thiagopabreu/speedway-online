var M=Object.defineProperty;var F=Object.getOwnPropertySymbols;var I=Object.prototype.hasOwnProperty,K=Object.prototype.propertyIsEnumerable;var T=(s,r,e)=>r in s?M(s,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[r]=e,P=(s,r)=>{for(var e in r||(r={}))I.call(r,e)&&T(s,e,r[e]);if(F)for(var e of F(r))K.call(r,e)&&T(s,e,r[e]);return s};import{Root as E,PointerDriver as U,DOMKeyboardDriver as H}from"@rafern/canvas-ui";import{vec3 as W,quat as N}from"gl-matrix";var k=null,f=null,g=null,o=class extends E{constructor(e,l,t,i){var v,y,O,D;i=P({pointerStyleHandler:u=>{WL.canvas.style.cursor=u},preventBleeding:!0},i);super(t,i);this.texture=null;this.mesh=null;this.oldTexSize=[0,0];this.collision=null;this.cursorTarget=null;this.valid=!1;this.keydownEventListener=null;this.keyupEventListener=null;this.unHoverFunction=null;this.moveFunction=null;this.downFunction=null;this.upFunction=null;let a=(v=i.collisionGroup)!=null?v:1,n=(y=i.registerPointerDriver)!=null?y:!0,h=(O=i.registerKeyboardDriver)!=null?O:!0;if(this.unitsPerPixel=(D=i.unitsPerPixel)!=null?D:.01,this.meshObject=WL.scene.addObject(e),this.meshObject.active=!1,a!==null&&n&&this.registerDriver(o.pointerDriver),h&&this.registerDriver(o.keyboardDriver),this.meshComponent=this.meshObject.addComponent("mesh"),this.materialClone=l.clone(),this.meshComponent.material=this.materialClone,this._setupMesh(1,0),a!==null){this.collision=this.meshObject.addComponent("collision",{collider:WL.Collider.Box,extents:[1,1,.01],group:1<<a}),this.cursorTarget=this.meshObject.addComponent("cursor-target");let u=new Float32Array(3),x=new Float32Array(3),w=new Float32Array(4),L=this.meshObject,j=m=>(u.set(m.rayHit.locations[0]),L.getTranslationWorld(x),W.sub(u,u,x),N.invert(w,L.rotationWorld),W.transformQuat(u,u,w),W.div(u,u,L.scalingWorld),[Math.min(Math.max((u[0]+1)/2,0),1),Math.min(Math.max(1-(u[1]+1)/2,0),1)]);if(n){let m=!1,p=!1,b=!1;this.keydownEventListener=c=>{c.key==="Shift"&&(m=!0),c.key==="Control"&&(p=!0),c.key==="Alt"&&(b=!0)},this.keyupEventListener=c=>{c.key==="Shift"&&(m=!1),c.key==="Control"&&(p=!1),c.key==="Alt"&&(b=!1)},WL.canvas.addEventListener("keydown",this.keydownEventListener),WL.canvas.addEventListener("keyup",this.keyupEventListener),this.unHoverFunction=(c,d)=>{o.pointerDriver.leavePointer(this,o.getPointerID(d))},this.moveFunction=(c,d)=>{o.pointerDriver.movePointer(this,o.getPointerID(d),...j(d),null,m,p,b)},this.downFunction=(c,d)=>{o.pointerDriver.movePointer(this,o.getPointerID(d),...j(d),1,m,p,b)},this.upFunction=(c,d)=>{o.pointerDriver.movePointer(this,o.getPointerID(d),...j(d),0,m,p,b)},this.cursorTarget.addUnHoverFunction(this.unHoverFunction),this.cursorTarget.addMoveFunction(this.moveFunction),this.cursorTarget.addDownFunction(this.downFunction),this.cursorTarget.addUpFunction(this.upFunction)}}this.valid=!0,this.maxCanvasWidth=2048,this.maxCanvasHeight=2048}static get pointerDriver(){return k===null&&(k=new U),k}static get keyboardDriver(){return f===null&&(f=new H,f.bindDOMElem(WL.canvas)),f}static get pointerIDs(){return g===null&&(g=new Map),g}static getPointerID(e){let l=o.pointerIDs,t=l.get(e);return typeof t=="undefined"&&(t=o.pointerDriver.registerPointer(),l.set(e,t)),t}update(){if(!this.valid)return;let e=this.meshObject;this.preLayoutUpdate();let l=this.resolveLayout(),[t,i]=this.canvasDimensions;if(l){let[n,h]=this.dimensions,[v,y]=this.effectiveScale;e.resetScaling(),e.scale([this.unitsPerPixel*n,this.unitsPerPixel*h,.01]),this.collision!==null&&(this.collision.extents=[e.scalingWorld[0],e.scalingWorld[1],.01]),this._setupMesh(v*n/t,1-y*h/i)}this.postLayoutUpdate();let a=this.paint();if(e.active=this.enabled,!!a)if(this.oldTexSize[0]!==t||this.oldTexSize[1]!==i){this.oldTexSize[0]=t,this.oldTexSize[1]=i;let n=this.materialClone,h=this.texture;this.texture=new WL.Texture(this.canvas),n.shader==="Flat Opaque Textured"||n.shader==="Flat Transparent Textured"?n.flatTexture=this.texture:n.shader=="Phong Opaque Textured"?n.diffuseTexture=this.texture:console.error("Shader",n.shader,"not supported by WLRoot"),h&&h.destroy()}else this.texture?this.texture.update():console.warn("There is no texture to update! Is the canvas dimensionless?")}_setupMesh(e,l){let t=new WL.Mesh({indexData:new Uint8Array([0,3,1,0,2,3]),indexType:WL.MeshIndexType.UnsignedByte,vertexCount:4}),i=t.attribute(WL.MeshAttribute.Position),a=t.attribute(WL.MeshAttribute.Normal),n=t.attribute(WL.MeshAttribute.TextureCoordinate);i.set(0,[-1,1,0]),a.set(0,[0,0,1]),n.set(0,[0,1]),i.set(1,[1,1,0]),a.set(1,[0,0,1]),n.set(1,[e,1]),i.set(2,[-1,-1,0]),a.set(2,[0,0,1]),n.set(2,[0,l]),i.set(3,[1,-1,0]),a.set(3,[0,0,1]),n.set(3,[e,l]),this.meshComponent.mesh=t,this.mesh&&this.mesh.destroy(),this.mesh=t}destroy(){this.keydownEventListener!==null&&(WL.canvas.removeEventListener("keydown",this.keydownEventListener),this.keydownEventListener=null),this.keyupEventListener!==null&&(WL.canvas.removeEventListener("keyup",this.keyupEventListener),this.keyupEventListener=null),this.cursorTarget&&(this.unHoverFunction!==null&&(this.cursorTarget.removeUnHoverFunction(this.unHoverFunction),this.unHoverFunction=null),this.moveFunction!==null&&(this.cursorTarget.removeMoveFunction(this.moveFunction),this.moveFunction=null),this.downFunction!==null&&(this.cursorTarget.removeDownFunction(this.downFunction),this.downFunction=null),this.upFunction!==null&&(this.cursorTarget.removeUpFunction(this.upFunction),this.upFunction=null)),this.texture&&(this.texture.destroy(),this.texture=null),this.collision&&(this.collision.destroy(),this.collision=null),this.cursorTarget&&(this.cursorTarget.destroy(),this.cursorTarget=null),this.meshComponent&&(this.meshComponent.destroy(),this.meshComponent=null),this.mesh&&this.mesh.destroy(),this.meshObject&&(this.meshObject.destroy(),this.meshObject=null),this.valid=!1,super.destroy()}};import{VirtualKeyboard as S,defaultVirtualKeyboardTemplate as A,Margin as V}from"@rafern/canvas-ui";var C=class extends o{constructor(e,l,t){var a,n;let i=(a=t==null?void 0:t.keyboardDriver)!=null?a:o.keyboardDriver;super(e,l,new V(new S(i,(n=t==null?void 0:t.keyboardTemplate)!=null?n:A)),t);this.keyboardDriver=i}updateVisibility(){!this.valid||(this.enabled=this.keyboardDriver.needsInput)}};import{PointerHint as R}from"@rafern/canvas-ui";WL.registerComponent("canvas-ui-input-guard",{keyboardComponentName:{type:WL.Type.String,default:""},keyboardObject:{type:WL.Type.Object,default:null},pointerComponentName:{type:WL.Type.String,default:""},pointerObject:{type:WL.Type.Object,default:null},cursorObject:{type:WL.Type.Object,default:null}},{init(){this.pointer=null,this.pointerComponent=null,this.keyboardComponent=null},start(){if(this.keyboardComponentName!=="")if(this.keyboardObject!==null){let s=this.keyboardObject.getComponent(this.keyboardComponentName,0);s===null?console.warn("keyboardObject has no component with name",this.keyboardComponentName):this.keyboardComponent=s}else console.warn("keyboardComponentName set in canvas-ui-keyboard-guard, but keyboardObject was not");if(this.pointerComponentName!=="")if(this.pointerObject!==null){let s=this.pointerObject.getComponent(this.pointerComponentName,0);if(s===null){console.warn("pointerObject has no component with name",this.pointerComponentName);return}if(this.cursorObject!==null){let r=this.cursorObject.getComponent("cursor",0);r===null?console.warn("cursorObject set in canvas-ui-keyboard-guard, but cursorObject has no cursor component"):(this.pointer=o.getPointerID(r),this.pointerComponent=s)}else console.warn("pointerObject set in canvas-ui-keyboard-guard, but cursorObject was not")}else console.warn("pointerComponentName set in canvas-ui-keyboard-guard, but pointerObject was not")},update(s){if(this.keyboardComponent!==null){let r=!o.keyboardDriver.needsInput;this.keyboardComponent.active=r}if(this.pointer!==null&&this.pointerComponent!==null){let r=o.pointerDriver.getPointerHint(this.pointer)===R.None;this.pointerComponent.active=r}},onDeactivate(){this.keyboardComponent!==null&&(this.keyboardComponent.active=!0),this.pointerComponent!==null&&(this.pointerComponent.active=!0)}});WL.registerComponent("virtual-keyboard-ui-root",{material:{type:WL.Type.Material}},{init(){this.root=new C(this.object,this.material),this.forceDisabled=!1},update(s){this.root&&!this.forceDisabled&&(this.root.updateVisibility(),this.root.update())},onActivate(){this.root&&(this.forceDisabled=!1,this.root.enabled=!0)},onDeactivate(){this.root&&(this.forceDisabled=!0,this.root.enabled=!1)}});export{o as WLRoot,C as WLVirtualKeyboardRoot};
//# sourceMappingURL=index.esm.js.map
